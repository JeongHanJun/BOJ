우선 문제의 링크
https://www.acmicpc.net/problem/2447
별찍기 에 대한 내용, 3의 제곱수 단위의 규칙, 재귀를 통하여 별찍기를 구현해라
일단 문제 예제를 보고 유심히 보면
정사각형 모양의 규칙이 3의제곱수 단위에서 확장된다
여기서는 편의상 각 칸에 띄어쓰기를 부여해서 보여줌
* * *
*   *
* * *   이게 3 x 3 단위 정사각형에서의 규칙
이제 위를 9 x 9 단위로 확장시키면
* * * * * * * * *
*   * *   * *   *
* * * * * * * * *
* * *       * * * 
*   *       *   *
* * *       * * *
* * * * * * * * *
*   * *   * *   *
* * * * * * * * * 이렇게 된다.
자 3x3 단위에서 위 작은 정사각형 출력 못하는 사람 없다.
2중 for문 돌려서 1x1 원소에 해당하면 출력안하면 된다
그 부분은 코드로는
for( int i = 0 ; i < 3 ; i++)
{
	for( int j = 0 ; j < 3; j++)
	{
		if( i == 1 && j == 1)
			continue;
		System.out.printf("*");
	}
} 
여기까지는 쉽다
그 다음 해야할것은 재귀적 호출, 3의 제곱수단위에서의 프레임 변화(큰값부터 줄여서 보던지 작은값에서부터 확장해서 보던지(
나는 큰값부터 줄여서 보기로 했다. 그러면 그 프레임을 관리하는 변수가 필요함
난 그 변수를 div 로 정했다 divisor 나누기로 프레임을 나눠서 보겠다는 의미
즉 divide and conquer 의 방식으로 가는것이다.
입력받은 n 그대로 함수로 받아서 이 n을 1까지 나눈다.
1까지 나누는 이유는 1-3-9-27 등등 이런식으로 3의 제곱수에서 가장 작은 자연수이므로
그래서 n = 1 이면 한 칸 단위다. 1x1 정사각형이라고도 볼 수 있다.
이게 n=1 이면 *을 출력하고, 단, 정사각형의 중심일경우는 continue 로 거르는것은 아직 필요
따라서 위 *을 출력하는 부분에 재귀 호출을 넣고, 이중for문 위에 n=1 일경우 *을 출력하는 것을 넣으면 된다.
div에 관한 식은 어디에 둘것인가. 별출력과 이중for문 사이에 두어야한다.
왜냐면 별출력(n=1)은 제일 우선, 그 다음에 div를 보고, 이에 따라 2중for문 돌리고, 그 2중for문 안에서 중앙은 거른다.
이 논리를 따라가야한다.
public static void star(int a, int b, int n) {
        int div = 0;
        if(n == 1)
        {
            arr[a][b] = '*';
            return;
        }
        div = n/3;
        for( int i = 0 ; i < 3 ; i++)
        {
            for( int j = 0 ; j < 3 ; j++)
            {
                if( i == 1 && j == 1)
                    continue;
                star(a+(div*i) , b + (div*j) , div);
            }
        }
    }
그럼 이런 코드가 나온다. public 안붙여도 됨

import java.util.*;
import java.io.*;
public class Main {
    static char[][] arr;
    static void star(int a, int b, int n) {
        int div = 0;
        if(n == 1)
        {
            arr[a][b] = '*';
            return;
        }
        div = n/3;
        for( int i = 0 ; i < 3 ; i++)
        {
            for( int j = 0 ; j < 3 ; j++)
            {
                if( i == 1 && j == 1)
                    continue;
                star(a+(div*i) , b+(div*j) , div);
            }
        }
    }
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int n = Integer.parseInt(br.readLine());
        arr = new char[n][n];
        for( int i = 0 ; i < arr.length ; i++)
        {
            Arrays.fill(arr[i], ' ');
        }
        star(0, 0, n);
        for( int i = 0 ; i < arr.length ; i++)
        {
            System.out.println(arr[i]);
        }
    }
}