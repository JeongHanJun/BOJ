# 1011 Fly me to the Alpha Centauri
'''
Alpha Centauri 라는 시스템때문에 공간이동장치를 탑재
공간이동장치는 이전에 k광년 이동시, 그 다음에는 k-1 or k or k+1 광년 만을 이동할 수 있다.
x지점부터 y지점까지 최소 이동횟수
단 y지점에 도착하기 바로 직전의 이동은 1을 이동하는것으로 고정

* 참고로 문제 설명이 부실(처음이동을 예시로 잡음)한데, 처음이동은 1로 고정이라고 봐야함
시작점 = x , 도착점 = y
이동횟수        거리(y-x)       이동경로           최대값(한번 이동거리의 최대값)         
1               1               1                   1

2               2               11                  1             

3               3               111                  
3               4               121                 2

4               5               1211                
4               6               1221                2

5               7               12211               
5               8               12221               
5               9               12321               3

6               10              123211
6               11              123221
6               12              123321              3

7               13              1233211
7               14              1233221
7               15              1233321
7               16              1234321             4

8               17              12343211
8               18              12343221
8               19              12343321
8               20              12344321            4

9               21              123443211

여기서 이동횟수를 기준으로 최대거리를 보면

이동횟수=Cnt    거리(y-x)=dist  이동경로           최대값(한번 이동거리의 최대값) = max 
1               1               1                   1
2               2               11                  1
3               4               121                 2
4               6               1221                2
5               9               12321               3
6               12              123321              3
7               16              1234321             4
8               20              12344321            4

알 수 있는것
1. 위의 이동경로는 좌우대칭형이다.
2. 최대값을 갖는 다음 이동은 무조건 이동횟수가 늘어난다.
3. 최대값이 변하는 지점은 거리에 루트를 씌운값이다.         
4. max값이 변하는 사이 구간에는 이동횟수가 2번 바뀐다.
5. 최대값은 1, 1, 2, 2, 3, 3, 4, 4 이렇게 1씩 증가하면서 ,  2번 반복된다.
6. max값이 변할때 이동횟수 = 2 * max - 1 이다.

알 수 있는것  을 코딩으로
1. 해당사항 없음
2. cnt 값을 통해 dist의 범위를 정할 수 있다.
3. max = int(Math.sqrt(distance))
4. 2번 바뀌므로 max값이 변하는 사이에는 2가지의 cnt값이 존재
5. 그 2가지의 cnt값이 같은 값을 가지므로 max값이 변하는 사이에는 규칙이 존재
ex)  dist   9   10  11  12       13  14  15  16
     cnt    5   6   6   6        7   7   7   7
     max    3   3   3   3        3   3   3   4
               < 구 간 1    >  <  구  간  2 >
    
    max*max <= 구간 1의 dist <= max*max + max
    구간 1의 cnt = 2 * max

    max*max + max < 구간 2의 dist < (max+1)*(max+1)   혹은 max*max + max < 구간 2의 dist <= max*max + 2*max
    구간 2의 cnt = 2 * max + 1

추가적으로 구간 3 이라고도 정의할 공간은 완전제곱수이다.
max 는 dist에 루트를 씌운 값중 정수인데
만약, 완전제곱수인 dist라서, 소수점이 없는 경우에는
이동횟수 = 2 * max - 1

'''
from sys import stdin
for _ in range(int(input())):
    x, y = map(int, stdin.readline().strip().split())
    dist = y - x
    max = int(dist ** 0.5)
    if max - dist ** 0.5 == 0:# 완전제곱수
        print(2 * max - 1)
    elif dist <= max*max + max:#구간1
        print(2*max)
    else:#구간2
        print(2*max+1)






